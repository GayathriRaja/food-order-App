{"version":3,"sources":["component/Images/GImage1.jpg","utils/constants.js","component/menu/Redux/Action/defaultArrayCartAction.js","component/menu/Redux/Action/DefaultCartUpdateValue.js","component/menu/Redux/Action/defultPriceAction.js","FirebaseConfig/firebase.js","component/menu/Header.js","component/PaymentBill/ModeOfPayment.js","component/menu/Redux/Action/increaseCartAction.js","component/menu/Redux/Action/arrayForCartAction.js","component/menu/Redux/Action/deleteArrayAction.js","component/menu/Redux/Action/reducecCartAction.js","component/menu/Redux/Action/PriceCalculationAction.js","component/menu/Redux/Action/incrementArrayAction.js","component/menu/Redux/Action/decreasePriceCalculation.js","component/menu/FoodItemListFunctionalComponent.js","component/ErrorBoundary.js","component/menu/MenuMain.js","component/LoginAndRegister/LoginAndRegister.js","App.js","serviceWorker.js","component/menu/Redux/Reducer/index.js","component/menu/Redux/Reducer/allReducer.js","index.js"],"names":["module","exports","foodList","id","title","description","source","price","catogory","cuisines","defaultArrayCartAction","type","defaultCartACtion","defaultPricetAction","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","GoogleAuthProvider","storage","database","functions","messaging","Header","props","selector","useSelector","state","updateCart","Dispatch","useDispatch","useState","keyvalue","setKeyValue","cartDisplay","setCartDisplay","useEffect","cartValueFromHeader","updateCuisine","getSearchKeyValue","i","setInterval","color","document","getElementById","style","borderColor","length","className","class","onClick","height","width","src","LogoImage","map","cuisine","clickedItem","onChange","event","key","target","value","placeholder","aria-label","exact","strict","to","DefaultArrayCartAction","DefaultCartUpdateValue","defultPriceAction","signOut","ModeOfPayment","cardNumber","cardEndDate","cvv","cashDeliveryClicked","setCashDeliveryClicked","cardDeliveryClicked","setCardDeliveryClicked","placeOrderClicked","setPlaceOrderClicked","cardPaymentClicked","setCardPaymentClicked","statusCash","setStatusCash","statusCard","setStatusCard","history","useHistory","push","name","fetch","method","headers","body","JSON","stringify","PaymentMode","then","result","json","console","log","toString","CardNumber","CardEndDate","CVV","increaseCartAction","arrayForCartAction","payload","deleteArrayAction","array","reduceCartAction","priceCalculationAction","pricevalue","parameter","incrementArrayAction","decreasePriceCalculation","FoodItemListFunctionalComponent","cartValueUpdate","arrayRedux","cartArray","totalAmount","priceAmount","food","cartItems","arrayObject","Object","values","reducecCartAction","filter","a","ErrorBoundary","hasError","error","info","this","setState","logErrorToMyService","children","React","Component","MenuMain","selectedCuisine","setselectedCuisine","searchItem","setsearchItem","cart","setCartCount","foodInCart","setFoodInCart","setCartItems","item","searchKey","cartValue","headerValue","foodItemsAddedToCart","CartItems","LoginAndRegister","messageLogin","setmessageLogin","registerMessage","setRegisterMessage","Email","Password","createEmail","createFname","CreateLname","CreatePassword","Address","signInWithEmailAndPassword","catch","response","createUserWithEmailAndPassword","collection","doc","currentUser","uid","set","email","fname","lname","FirstName","LastName","App","path","component","Boolean","window","location","hostname","match","everyReducers","combineReducers","action","splice","indexOf","store","createStore","everyReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d79e3448.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GImage1.e1de8a11.jpg\";","export const foodList = [\r\n   { id: 1,\r\n     title: 'Biriyani',\r\n     description: 'Delicious!! Chicken Hyderabadi dum  Biriyani with Tender Chicken mixed with different spices ',\r\n     source: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRpwX3H85sfE8vXdfjzQ3XANGq2_qayrgpNwET3_z16NZyJ7weD',\r\n     price: 280,\r\n     catogory:'IndianCuisine'\r\n   },\r\n\r\n  { id: 2,\r\n    title: 'Pasta',\r\n    description: 'Delicious!! Veg sauce Pasta with onion,Corn and Black Olives with Extra creamy white sauce   ',\r\n    source: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR2UjIcSsyBGhx6rvsyQPESqJkG0k3VaT2VPwWEEcJbchakl5Pr',\r\n    price: 160,\r\n    catogory:'ItalianCuisine'\r\n  },\r\n\r\n  { id: 3,\r\n    title: 'Pizza',\r\n    description: 'Delicious!! Chicken Pizza with Chicken,onion,Corn,tomato,olives with fresh mixed Seasoning',\r\n    source: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQUT2q8TFu6UX2r88uC69XwNDkB5mmxd3jLvr0Zmb5qXcmROEMO',\r\n    price: 250,\r\n    catogory:'Pizza'\r\n\r\n  },\r\n\r\n\r\n  { id: 4,\r\n    title: 'Lassagna',\r\n    description: 'Delicious!! Lassagna with Layer Of Veggies,Cheese,sauces and of course with Great Italian Flovours',\r\n    source: ' https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR9qdW2QfS0x96BKgTUadNWvvQzLO0c579OdvSyZ2MtF1v3r5gw',\r\n    price: 325,\r\n    catogory:'ItalianCuisine'\r\n\r\n  }\r\n\r\n]\r\n\r\nexport const cuisines = ['IndianCuisine','ItalianCuisine','Pizza'];\r\n// export const cuisines = ['ItalianCuisine ','Pizza'];\r\n// export const cuisines = ['IndianCuisine ','ItalianCuisine ','Pizza'];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const defaultArrayCartAction=()=>{\r\n    return {\r\n        type:\"defaultArray\",\r\n    }\r\n}\r\n\r\nexport default defaultArrayCartAction;","const defaultCartACtion=()=>{\r\n    return {\r\n        type:\"defaultCart\",\r\n    }\r\n}\r\n\r\nexport default defaultCartACtion;","const defaultPricetAction=()=>{\r\n    return {\r\n        type:\"defaultPrice\",\r\n    }\r\n}\r\n\r\nexport default defaultPricetAction;","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCEexosdkkQ304n_ZNN-bF0FtgQ3phZ1OI\",\r\n  authDomain: \"food-order-app-firebase.firebaseapp.com\",\r\n  projectId: \"food-order-app-firebase\",\r\n  storageBucket: \"food-order-app-firebase.appspot.com\",\r\n  messagingSenderId: \"472178585507\",\r\n  appId: \"1:472178585507:web:ad5e68254b1de697097416\",\r\n  measurementId: \"G-HC01QT09H1\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst storage = firebase.storage();\r\nconst database = firebase.database();\r\nconst functions = firebase.functions();\r\nconst addMessages = firebase.messaging;\r\n\r\nexport {\r\n  auth,\r\n  provider,\r\n  firebaseApp,\r\n  storage,\r\n  database,\r\n  functions,\r\n  addMessages,\r\n};\r\nexport default db;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { cuisines } from \"../../utils/constants\";\r\nimport \"../FoodDescription.css\";\r\nimport LogoImage from \"../Images/GImage1.jpg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DefaultArrayCartAction from \"./Redux/Action/defaultArrayCartAction\";\r\nimport DefaultCartUpdateValue from \"./Redux/Action/DefaultCartUpdateValue\";\r\nimport defultPriceAction from \"./Redux/Action/defultPriceAction\";\r\nimport db, { firebaseApp, auth } from \"../../FirebaseConfig/firebase\";\r\n\r\nconst Header = (props) => {\r\n  const selector = useSelector((state) => state.updateCart);\r\n  const Dispatch = useDispatch();\r\n\r\n  const onItemClick = (clickedItem) => () => {\r\n    if (props.updateCuisine) {\r\n      props.cartValueFromHeader(false);\r\n      props.getSearchKeyValue();\r\n      props.updateCuisine(clickedItem);\r\n    }\r\n  };\r\n\r\n  const [keyvalue, setKeyValue] = useState(\"Enter the key\");\r\n\r\n  const onChangesearchButton = (event) => {\r\n    var key = event.target.value;\r\n    setKeyValue(key);\r\n  };\r\n\r\n  const onClickedSearchButton = () => {\r\n    if (props.getSearchKeyValue) {\r\n      props.cartValueFromHeader(false);\r\n      props.updateCuisine();\r\n      props.getSearchKeyValue(keyvalue);\r\n    }\r\n  };\r\n\r\n  const onClickHomeButton = () => {\r\n    if (props.updateCuisine) {\r\n      props.updateCuisine();\r\n    }\r\n    if (props.getSearchKeyValue) {\r\n      props.getSearchKeyValue();\r\n    }\r\n    if (props.cartValueFromHeader) {\r\n      props.cartValueFromHeader(false);\r\n    }\r\n  };\r\n\r\n  const [cartDisplay, setCartDisplay] = useState(false);\r\n\r\n  const onClickHandlerCart = () => {\r\n    setCartDisplay(true);\r\n\r\n    if (props.cartValueFromHeader) {\r\n      props.updateCuisine();\r\n      props.getSearchKeyValue();\r\n      props.cartValueFromHeader(cartDisplay);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.cartValueFromHeader) {\r\n      props.updateCuisine();\r\n      props.getSearchKeyValue();\r\n      props.cartValueFromHeader(cartDisplay);\r\n    }\r\n  }, [cartDisplay]);\r\n\r\n  var i = 0;\r\n  function change() {\r\n    var doc = document.getElementById(\"logo\");\r\n\r\n    var color = [\r\n      \"#990026\",\r\n      \"#990073\",\r\n      \"#4d0099\",\r\n      \"#007399\",\r\n      \"#4d9900\",\r\n      \"#997300\",\r\n      \"#994d00\",\r\n    ];\r\n\r\n    //  doc.style.borderStyle=\"dotted\";\r\n\r\n    doc.style.borderColor = color[i];\r\n\r\n    //  doc.style.background = color[i];\r\n\r\n    i = (i + 1) % color.length;\r\n  }\r\n  setInterval(change, 1000);\r\n\r\n  /////Multiple event Listener\r\n  return (\r\n    <div id=\"HeaderColor\">\r\n      <div className=\"backgroundImage\"></div>\r\n\r\n      <nav id=\"navColor\" className=\"navbar navbar-expand-lg navbar-primary \">\r\n        <ul class=\"navbar-nav\">\r\n          <li class=\"nav-item active\" onClick={onClickHomeButton}>\r\n            <span height=\"40px\" width=\"40px\" id=\"one\">\r\n              <img id=\"logo\" src={LogoImage} />\r\n              FoodOrder{\" \"}\r\n            </span>{\" \"}\r\n          </li>\r\n        </ul>\r\n        <div>\r\n          <ul class=\"navbar-nav\">\r\n            {cuisines.map((cuisine) => (\r\n              <li\r\n                id=\"navColour\"\r\n                class=\"nav-link navbar-light\"\r\n                onClick={onItemClick(cuisine)}\r\n              >\r\n                {\" \"}\r\n                {cuisine}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <ul class=\"form-inline my-2 my-lg-0 list-unstyled\">\r\n          <li>\r\n            {\" \"}\r\n            <input\r\n              class=\"form-control  mr-sm-2\"\r\n              type=\"search\"\r\n              onChange={onChangesearchButton}\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />{\" \"}\r\n          </li>\r\n          <li>\r\n            {\" \"}\r\n            <button\r\n              id=\"navColour\"\r\n              class=\"btn btn-outline-success my-2 my-sm-0 \"\r\n              onClick={onClickedSearchButton}\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </button>{\" \"}\r\n          </li>\r\n          <li\r\n            id=\"navColour\"\r\n            class=\"nav-link navbar-light\"\r\n            onClick={onClickHandlerCart}\r\n          >\r\n            Cart({selector})\r\n          </li>\r\n          {/* <Link to=\"/\">LOGOUT</Link> */}\r\n          <Link\r\n            id=\"navColour\"\r\n            class=\"nav-link navbar-light\"\r\n            exact\r\n            strict\r\n            to=\"/\"\r\n            onClick={() => {\r\n              Dispatch(DefaultArrayCartAction());\r\n              Dispatch(DefaultCartUpdateValue());\r\n              Dispatch(defultPriceAction());\r\n            }}\r\n            onClick={() => {\r\n              auth.signOut();\r\n            }}\r\n          >\r\n            LOGOUT <span class=\"sr-only\">LOGOUT</span>\r\n          </Link>\r\n          {/* <li\r\n            class=\"nav-link navbar-light\"\r\n            id=\"navColour\"\r\n            class=\"nav-link navbar-light\"\r\n          >\r\n            {auth.currentUser.email}\r\n          </li> */}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState} from 'react';\r\nimport LogoImage from '../Images/GImage1.jpg';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';  \r\nimport DefaultArrayCartAction from '../menu/Redux/Action/defaultArrayCartAction';\r\nimport DefaultCartUpdateValue from '../menu/Redux/Action/DefaultCartUpdateValue';\r\nimport defultPriceAction from '../menu/Redux/Action/defultPriceAction';\r\nimport defaultPricetAction from '../menu/Redux/Action/defultPriceAction';\r\n\r\n\r\nconst ModeOfPayment=()=>{\r\n\r\n    var cardNumber=0;\r\n    var cardEndDate=null;\r\n    var cvv=0;\r\n\r\n\r\n    const [cashDeliveryClicked,setCashDeliveryClicked]=useState(false);\r\n    const [cardDeliveryClicked,setCardDeliveryClicked]=useState(false);\r\n    const [placeOrderClicked,setPlaceOrderClicked]=useState(false);\r\n    const [cardPaymentClicked,setCardPaymentClicked]=useState(false);\r\n    const[statusCash,setStatusCash]=useState(0);\r\n    const[statusCard,setStatusCard]=useState(0);\r\n\r\n    const Dispatch=useDispatch();\r\n\r\n\r\n    const history=useHistory();\r\n\r\n\r\n\r\n    const onChangeCardNumber=(event)=>{\r\n      \r\n        cardNumber=event.target.value;\r\n\r\n    }\r\n\r\n    const onChangeEndingDate=(event)=>{\r\n\r\n       cardEndDate=event.target.value;\r\n\r\n    }\r\n\r\n    const onChangeCVV=(event)=>{\r\n\r\n       cvv=event.target.value;\r\n\r\n    }\r\n\r\n   const onClickHandlerHome=()=>{\r\n\r\n        history.push('/Home')  \r\n\r\n   }\r\n\r\n   const onClickHandlerLogout=()=>{\r\n\r\n     history.push('/')  \r\n\r\n\r\n   }\r\n\r\n   const onClickHandlerCash=()=>{\r\n\r\n    setPlaceOrderClicked(false);\r\n    setCardDeliveryClicked(false);\r\n    setCashDeliveryClicked(true);\r\n\r\n\r\n   }\r\n\r\n   const onClickHandlerCard=()=>{\r\n\r\n    setPlaceOrderClicked(false);\r\n    setCashDeliveryClicked(false);\r\n    setCardDeliveryClicked(true);\r\n\r\n\r\n   }\r\n\r\n   const onClickHandlerPayCash=()=>{\r\n\r\n    setPlaceOrderClicked(true);\r\n\r\n\r\n\r\n     fetch(\"https://localhost:44386/api/LoginAndRegister/postOrder\",{\r\n          method:\"POST\",\r\n          headers:{'Content-Type':'application/json'},\r\n          body:JSON.stringify({\r\n               PaymentMode:'cash',\r\n          })\r\n          \r\n          \r\n          \r\n     }).then(result=>result.json()).then(result=>{\r\n          console.log(\"result:\"+result);\r\n          if(result>0)\r\n               {\r\n                    console.log(\"result:\"+result);\r\n                    setStatusCash(result);\r\n               }\r\n               else{\r\n                    console.log(\"result:\"+result);\r\n                    setStatusCash(\"Order not Placed\");\r\n\r\n\r\n               }\r\n          }\r\n\r\n\r\n          )\r\n\r\n\r\n   }\r\n\r\n   const onClickHandlerCardPayment=()=>{\r\n     setCardPaymentClicked(true);\r\n\r\n               if(cardNumber.toString().length==10 && cardEndDate.length==5 && cvv.toString().length==3)\r\n                 {\r\n\r\n                    fetch('https://localhost:44386/api/LoginAndRegister/postOrder',{\r\n                         method:\"POST\",\r\n                         headers:{'Content-Type':'application/json'},\r\n                         body:JSON.stringify({\r\n                              PaymentMode:\"card\",\r\n                              CardNumber:cardNumber,\r\n                              CardEndDate:cardEndDate,\r\n                              CVV:cvv\r\n                         })\r\n                    }).then(value=>value.json()).then(value=>{\r\n                         if(value>0){\r\n                              setStatusCard(value);\r\n                         }\r\n                         else{\r\n                              setStatusCard(\"Order not Placed\");\r\n\r\n                         }\r\n                    })\r\n\r\n                }\r\n                else{\r\n                    setStatusCard(\"Order not Placed\");\r\n\r\n                }\r\n\r\n   }\r\n\r\n\r\n   var i = 0;\r\n   function change() {\r\n      var doc = document.getElementById(\"logo\");\r\n    \r\n   var color = [\"#990026\", \"#990073\", \"#4d0099\",\"#007399\",\"#4d9900\",\"#997300\",\"#994d00\"];\r\n  \r\n  \r\n  //  doc.style.borderStyle=\"dotted\";\r\n  \r\n  \r\n     doc.style.borderColor = color[i];\r\n  \r\n    \r\n    //  doc.style.background = color[i];\r\n  \r\n     i = (i + 1) % color.length;\r\n   }\r\n   setInterval(change, 1000);\r\n\r\n\r\n    return (\r\n        <div>\r\n             <div id=\"HeaderColor\">\r\n           <nav id=\"navColor\" className=\"navbar navbar-expand-lg navbar-primary \">           \r\n                <ul class=\"navbar-nav\">\r\n                       \r\n\r\n                     <li  class=\"nav-item active\"  ><span height=\"40px\" width=\"40px\" onClick={onClickHandlerHome} id=\"one\"><img id=\"logo\"  src={LogoImage}/>FoodOrder </span> </li>  \r\n                </ul>\r\n                <div >\r\n                \r\n               </div>\r\n               <ul class=\"form-inline my-2 my-lg-0 list-unstyled\">\r\n                              {/* <li id=\"navColour\" class=\"nav-link navbar-light\" onClick={onClickHandlerCart}>Cart({selector})</li> */}\r\n                              {/* <Link to=\"/\">LOGOUT</Link> */}\r\n                              <Link id=\"navColour\" class=\"nav-link navbar-light\" onClick={()=>{onClickHandlerLogout();Dispatch(DefaultArrayCartAction());Dispatch(DefaultCartUpdateValue());Dispatch(defaultPricetAction())}} exact strict to=\"/\">LOGOUT <span class=\"sr-only\">LOGOUT</span></Link>\r\n                     </ul> \r\n           </nav>\r\n               \r\n   \r\n        </div>\r\n                <div className=\"paymentModeBackgroundImage\"></div>\r\n\r\n                <div id=\"paymentMode\" className=\"container\">\r\n                    { !placeOrderClicked || cashDeliveryClicked ?\r\n                         <div>\r\n                                    <p></p>\r\n                                    <h3 id=\"headingPayment\">Enter the mode of Payment</h3>\r\n                                    <p></p>\r\n                                    <div id=\"lbl_radio\">\r\n                                       <label >  <input type=\"radio\" name=\"paymentMode\" onClick={onClickHandlerCash}/> Cash onDelivery </label>\r\n                                       <p></p>\r\n                                       <label >  <input type=\"radio\" name=\"paymentMode\" onClick={onClickHandlerCard}/> Card Payment</label>\r\n                                    </div>\r\n                                    <p></p>\r\n                                    <button id=\"btn_pay\" onClick={onClickHandlerPayCash}>Proceed to pay</button>\r\n                                    {cashDeliveryClicked && placeOrderClicked ? \r\n                                    <div>\r\n                                         <p></p>\r\n                                         <label id=\"lbl_pay\">Status:Order Placed  OrdreID:{statusCash}</label>\r\n                                    </div>\r\n                                    :null}\r\n                         </div>\r\n\r\n                                    : cardDeliveryClicked && placeOrderClicked ?\r\n                                    \r\n                                    <div>\r\n\r\n                                        <h3 id=\"headingPaymentCard\">Enter the Card Details(Dummy)</h3>\r\n                                        <p></p>\r\n                                        <div id=\"lbl_card\">\r\n                                                    <p></p>\r\n                                                    <label>Card Number : <input type=\"text\" id=\"txt_cardNumber\" onChange={onChangeCardNumber} placeholder=\"10 Digit Number\"/></label>\r\n                                                    <p></p>\r\n                                                    <label>Card Ending Date : <input type=\"text\" id=\"date\" onChange={onChangeEndingDate} placeholder=\"mm/yy\"/></label>\r\n                                                    <p></p>\r\n                                                    <label>CVV : <input type=\"text\" id=\"cvv\" onChange={onChangeCVV} placeholder=\"3 Digit Number\"/></label>\r\n                                        </div>\r\n\r\n                                        <button id=\"btn_pay_card\" onClick={onClickHandlerCardPayment}>Place Order</button>\r\n                                        <p></p>\r\n                                        { cardPaymentClicked ?\r\n                                                <label id=\"lbl_pay\">Status:Order Palced Order ID:{statusCard}</label>\r\n                                        :null}\r\n                                    </div>\r\n                                    \r\n                                   : null }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ModeOfPayment;"," const increaseCartAction=()=>{\r\n    return {\r\n        type:\"increaseCart\"\r\n    }\r\n}\r\n\r\nexport default increaseCartAction\r\n\r\n","const arrayForCartAction=(value)=>{\r\n    return {\r\n        type:\"arrayForCart\",\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport default arrayForCartAction;","const deleteArrayAction=(array)=>{\r\n    return {\r\n      type:\"deleteArray\",\r\n      payload:array\r\n    }\r\n}\r\n\r\n\r\nexport default deleteArrayAction;","const reduceCartAction=()=>{\r\n    return {\r\n        type:\"reduceCart\"\r\n    }\r\n}\r\n\r\nexport default reduceCartAction","const priceCalculationAction=(pricevalue)=>{\r\n    return {\r\n        type:\"priceAmount\",\r\n        parameter:pricevalue\r\n    }\r\n}\r\n\r\nexport default priceCalculationAction;","const incrementArrayAction=(value)=>{\r\n    return {\r\n        type:\"incrementArray\",\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport default incrementArrayAction\r\n","const decreasePriceCalculation=(value)=>{\r\n    return {\r\n        type:\"decreasePrice\",\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport default decreasePriceCalculation;","import React, { useState,useEffect } from 'react';\r\nimport { foodList } from '../../utils/constants';\r\nimport paymentMode from '../PaymentBill/ModeOfPayment';\r\nimport {useHistory} from 'react-router-dom';\r\n// import { cuisines } from '../../utils/constants';\r\n// import Cart from './Cart';\r\n\r\nimport increaseCartAction from './Redux/Action/increaseCartAction';\r\nimport arrayForCartAction from './Redux/Action/arrayForCartAction';\r\nimport deleteArrayAction from './Redux/Action/deleteArrayAction';\r\nimport reducecCartAction from './Redux/Action/reducecCartAction';\r\nimport priceCalculationAction from './Redux/Action/PriceCalculationAction';\r\nimport incrementArrayAction from './Redux/Action/incrementArrayAction';\r\nimport decreasePriceCalculation from './Redux/Action/decreasePriceCalculation';\r\n\r\n\r\n\r\nimport {useDispatch,useSelector} from 'react-redux';  \r\n\r\n\r\nconst FoodItemListFunctionalComponent=(props)=>{ \r\n\r\n  var history=useHistory();\r\n\r\n\r\n const cartValueUpdate=useSelector(state=>state.updateCart); \r\n const arrayRedux=useSelector(state=>state.cartArray);\r\n const totalAmount=useSelector(state=>state.priceAmount);\r\n//  console.log(\"Total Amount:\"+totalAmount);\r\n const Dispatch=useDispatch();\r\n\r\n\r\nconst onClickPlaceOrder=()=>{\r\n\r\n  history.push(\"/paymentMode\");\r\n  \r\n\r\n}\r\n\r\n return (\r\n \r\n  <div>\r\n    <table id=\"bodyColor\" className=\"table\">\r\n     <div className=\"backgroundImage\"></div>\r\n     <div className=\"tableContent\">\r\n        <thead id=\"headColor\">\r\n        \r\n            <th id=\"headID\">ID</th>\r\n            <th id=\"headName\">Name</th>\r\n            <th id=\"headPicture\">Picture</th>\r\n            <th id=\"headprice\">Price in Rs</th>\r\n        \r\n        \r\n        </thead>\r\n\r\n        <tbody id=\"tBodyColor\">\r\n\r\n          { foodList.map(food=>{\r\n           \r\n               if(!props.updateCuisine && !props.getSearchKeyValue && !props.cartItems){\r\n\r\n                return (\r\n                 \r\n                      <tr id={food.id}>\r\n                             <td>{food.id}</td>\r\n                             <td>{food.title}<p>{food.description}</p></td>\r\n                             <td id=\"img\"><img src={food.source} height=\"200px\" width=\"200px\"/></td>\r\n                             <td>{food.price}</td>\r\n                             <td onClick={()=>{Dispatch(arrayForCartAction(food.id));Dispatch(increaseCartAction());Dispatch(priceCalculationAction(food.price))}}><button>Cart</button></td>\r\n\r\n                         </tr>\r\n                 \r\n                )\r\n                    \r\n            }\r\n            \r\n//Category based Food     \r\n else if(props.updateCuisine===food.catogory){\r\n     \r\n    \r\n    return (\r\n    \r\n          <tr id={food.id}>\r\n                 <td>{food.id}</td>\r\n                 <td>{food.title}<p>{food.description}</p></td>\r\n                 <td ><img src={food.source} height=\"200px\" width=\"200px\"/></td>\r\n                 <td>{food.price}</td>\r\n                 <td onClick={()=>{Dispatch(arrayForCartAction(food.id));Dispatch(increaseCartAction());Dispatch(priceCalculationAction(food.price))}}><button>Cart</button></td>\r\n             </tr>\r\n    )\r\n        \r\n}\r\n\r\n//Search\r\n\r\n  else if(props.getSearchKeyValue==food.id||props.getSearchKeyValue==food.title){\r\n\r\n  return (\r\n  \r\n        <tr id={food.id}>\r\n               <td>{food.id}</td>\r\n               <td>{food.title}<p>{food.description}</p></td>\r\n               <td><img src={food.source} height=\"200px\" width=\"200px\"/></td>\r\n               <td>{food.price}</td>\r\n               <td onClick={()=>{Dispatch(arrayForCartAction(food.id));Dispatch(increaseCartAction());Dispatch(priceCalculationAction(food.price));}}><button>Cart</button></td>\r\n         </tr>\r\n  )\r\n      \r\n  }\r\n\r\n  //Cart\r\n\r\n   else if(props.cartItems===true){\r\n\r\n    const arrayObject=Object.values(arrayRedux);\r\n\r\n   //console.log(arrayObject);\r\n\r\n  \r\n\r\n   const  someValue=arrayObject[0];  \r\n   //console.log(\"someValue:\"+someValue);\r\n\r\nfor(var i=0;i<arrayObject.length;i++){\r\n\r\n //console.log(\"arrayObject[i]:\"+arrayObject[i]);\r\n\r\n \r\n if(arrayObject[i]==food.id){\r\n  \r\n\r\n      return (\r\n              <tr id={food.id}>\r\n                  <td>{food.id}</td>\r\n                  <td>{food.title}<p>{food.description}</p></td>\r\n                  <td><img src={food.source} height=\"200px\" width=\"200px\"/></td>\r\n                  <td>{food.price}</td>\r\n                  <td><button onClick={ ()=>{Dispatch(deleteArrayAction(food.id));Dispatch(reducecCartAction());Dispatch(decreasePriceCalculation(food.price))}}>-</button></td>\r\n                  <td>{arrayObject.filter(a=> a==arrayObject[i]).length}</td>\r\n                  <td><button onClick={ ()=>{Dispatch(incrementArrayAction(food.id));Dispatch(increaseCartAction());Dispatch(priceCalculationAction(food.price))}}>+</button></td>\r\n\r\n              </tr>\r\n\r\n                    \r\n           )\r\n      }} \r\n    }\r\n\r\n\r\n\r\n\r\n  })}\r\n        </tbody>\r\n        </div>\r\n        </table>\r\n<div>\r\n \r\n                 { props.cartItems && cartValueUpdate ? \r\n                   \r\n                      <div id=\"priceDetails\">\r\n                       <h3 id=\"billDetails\">Billing Details</h3>\r\n                        <p id=\"charges\">Item Total:{totalAmount}</p>\r\n                        <p id=\"deliveryCharges\">Delivery Charge:35</p>\r\n                        <p id=\"totalAmount\">Grand Amount:{totalAmount+35}</p>\r\n                        <button id=\"btn_placeOrder\" onClick={onClickPlaceOrder}>Place Order</button>\r\n\r\n                    </div>: null}\r\n    )\r\n                     \r\n    </div>\r\n\r\n </div>)\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default FoodItemListFunctionalComponent;\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React, { Component, logErrorToMyService} from 'react'\r\n\r\n\r\n\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n      // console.log(\"No Error\");\r\n    }\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Display fallback UI\r\n      this.setState({ hasError: true });\r\n      // You can also log the error to an error reporting service\r\n      logErrorToMyService(error, info);\r\n      // console.log(\"Error\");\r\n\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Everything is all right time to attain success </h1>;\r\n      }\r\n      return this.props.children;\r\n    }\r\n  }\r\n\r\nexport default ErrorBoundary\r\n","import React, {useState,useEffect} from 'react';\r\nimport Header from './Header';\r\nimport FoodItemListFunctionalComponent from './FoodItemListFunctionalComponent';\r\n\r\n\r\nconst MenuMain = (props) => {\r\n    const [selectedCuisine, setselectedCuisine] = useState(false);\r\n    const [searchItem,setsearchItem]=useState(false);\r\n    const [cart,setCartCount]=useState(false);\r\n    const [foodInCart,setFoodInCart]=useState([]);\r\n    const [cartItems,setCartItems]=useState(false);\r\n\r\n    const updateCuisine = (item) => {\r\n          setselectedCuisine(item);\r\n\r\n    }\r\n          \r\n          useEffect(() => {\r\n                \r\n       }, [selectedCuisine])\r\n\r\n\r\n\r\n    const getSearchKeyValue=(searchKey)=>{\r\n          setsearchItem(searchKey);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n           \r\n }, [searchItem])\r\n\r\n\r\n    const cartValueUpdate=(value)=>{\r\n      if(value){\r\n      }\r\n      setCartCount(value);\r\n      \r\n      \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n},[cart])\r\n\r\n\r\n\r\n\r\n    const foodItemsAddedToCart=(CartItems)=>{\r\n\r\n      setFoodInCart([CartItems]);  \r\n\r\n           \r\n    }\r\n\r\n\r\n    useEffect(() => { \r\n\r\n},[foodInCart])\r\n\r\n\r\n\r\n\r\nconst cartValueFromHeader=(headerValue)=>{\r\n   setCartItems(headerValue);\r\n\r\n   \r\n }\r\n useEffect(() => {\r\n},[cartItems])\r\n\r\n\r\n\r\n  \r\n \r\nreturn(\r\n  \r\n  <div>\r\n  <Header  updateCuisine={updateCuisine} getSearchKeyValue={getSearchKeyValue} cartValue={cart} cartValueFromHeader={cartValueFromHeader}/>\r\n  <FoodItemListFunctionalComponent updateCuisine={selectedCuisine}  getSearchKeyValue={searchItem} cartValueUpdate={cartValueUpdate}  foodItemsAddedToCart={foodItemsAddedToCart} foodInCart={foodInCart}  cartItems={cartItems}    />\r\n</div>  \r\n  \r\n\r\n  )\r\n} \r\n          \r\n              \r\n\r\n          \r\n              \r\n        \r\n    \r\n\r\n\r\nexport default MenuMain;\r\n\r\n","import React, { useState } from \"react\";\r\nimport LogoImage from \"../Images/GImage1.jpg\";\r\nimport { Redirect, Link, useHistory } from \"react-router-dom\";\r\nimport Home from \"../menu/MenuMain\";\r\nimport MenuMain from \"../menu/MenuMain\";\r\nimport db, { firebaseApp, auth } from \"../../FirebaseConfig/firebase\";\r\n\r\nfunction LoginAndRegister(props) {\r\n  const [messageLogin, setmessageLogin] = useState(\"\");\r\n  const [registerMessage, setRegisterMessage] = useState(\"\");\r\n\r\n  //   var status;\r\n  var Email = null;\r\n  var Password = null;\r\n\r\n  var createEmail = null;\r\n  var createFname = null;\r\n  var CreateLname = null;\r\n  var CreatePassword = null;\r\n  var Address = null;\r\n\r\n  var history = useHistory();\r\n\r\n  const getLoginEmail = (event) => {\r\n    Email = event.target.value;\r\n  };\r\n\r\n  const getLoginPassword = (event) => {\r\n    Password = event.target.value;\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    //   console.log(\"Email:\"+Email);\r\n    //   console.log(\"Password:\"+Password);\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(Email, Password)\r\n      .then(() => {\r\n        history.push(\"/home\");\r\n        setmessageLogin(\"Login Successfully\");\r\n      })\r\n      .catch(() => {\r\n        setmessageLogin(\"Invalid Email or Password\");\r\n      });\r\n\r\n    fetch(\"https://localhost:44386/api/LoginAndRegister/postLogin\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        Email: Email,\r\n        Password: Password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result) {\r\n          console.log(\"Login\");\r\n\r\n          return history.push(\"/Home\");\r\n\r\n          //     return   history.push(\"/Home'\");\r\n\r\n          //     <Redirect exact strict to=\"/Home\"/>\r\n        } else {\r\n          console.log(\"Not Login\");\r\n          setmessageLogin(\"Status:Enter Valid ID or Password\");\r\n        }\r\n      });\r\n  };\r\n\r\n  var createFname,\r\n    CreateLname,\r\n    createEmail,\r\n    CreatePassword,\r\n    CreateConfirmPassword;\r\n\r\n  const getCreateFname = (event) => {\r\n    createFname = event.target.value;\r\n  };\r\n\r\n  const getCreateLname = (event) => {\r\n    CreateLname = event.target.value;\r\n  };\r\n\r\n  const getCreateEmail = (event) => {\r\n    createEmail = event.target.value;\r\n  };\r\n\r\n  const getCreatePwd = (event) => {\r\n    CreatePassword = event.target.value;\r\n  };\r\n\r\n  const getCreateAddress = (event) => {\r\n    Address = event.target.value;\r\n  };\r\n\r\n  const createAccountHandler = () => {\r\n    console.log(\"Firebase\");\r\n    auth\r\n      .createUserWithEmailAndPassword(createEmail, CreatePassword)\r\n      .then(() => {\r\n        db.collection(\"users\")\r\n          .doc(auth.currentUser.uid)\r\n          .set({\r\n            email: createEmail,\r\n            fname: createFname,\r\n            lname: CreateLname,\r\n          });\r\n        setRegisterMessage(\"User Created Successfully\");\r\n        //history.push(\"/\");\r\n      });\r\n\r\n    fetch(\"https://localhost:44386/api/LoginAndRegister/postAddAccount\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        FirstName: createFname,\r\n        LastName: CreateLname,\r\n        Email: createEmail,\r\n        Password: CreatePassword,\r\n        Address: Address,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"Value:\" + result);\r\n        if (result) {\r\n          console.log(\"Account created\");\r\n          setRegisterMessage(\"Status:Account Created Successfully\");\r\n        } else {\r\n          console.log(\"Account not created\");\r\n          setRegisterMessage(\"Status:Account Not Created\");\r\n        }\r\n      });\r\n  };\r\n\r\n  var i = 0;\r\n  function change() {\r\n    var doc = document.getElementById(\"logo\");\r\n\r\n    var color = [\r\n      \"#990026\",\r\n      \"#990073\",\r\n      \"#4d0099\",\r\n      \"#007399\",\r\n      \"#4d9900\",\r\n      \"#997300\",\r\n      \"#994d00\",\r\n    ];\r\n\r\n    doc.style.borderColor = color[i];\r\n\r\n    //     doc.style.background = color[i];\r\n\r\n    i = (i + 1) % color.length;\r\n  }\r\n  setInterval(change, 1000);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"loginAndRegister\"></div>\r\n\r\n      <nav id=\"loginNav\" className=\"navbar navbar-expand-lg navbar-primary \">\r\n        <ul class=\"navbar-nav\">\r\n          <li class=\"nav-item active\">\r\n            <span height=\"40px\" width=\"40px\" id=\"one\">\r\n              <img id=\"logo\" src={LogoImage} />\r\n              FoodOrder{\" \"}\r\n            </span>{\" \"}\r\n          </li>\r\n        </ul>\r\n        <div></div>\r\n      </nav>\r\n\r\n      <div id=\"login\">\r\n        <h2 id=\"headingLogin\">Login</h2>\r\n        <p></p>\r\n        <label id=\"lbl_Email\">\r\n          <strong>EmailID : </strong>\r\n          <input onChange={getLoginEmail} type=\"text\" id=\"loginid\" />\r\n        </label>\r\n        <p></p>\r\n        <label id=\"lbl_pwd\">\r\n          <strong>Password : </strong>\r\n          <input onChange={getLoginPassword} type=\"password\" id=\"pwd\" />\r\n        </label>\r\n\r\n        <p></p>\r\n\r\n        <button id=\"btn_login\" onClick={loginHandler}>\r\n          Login\r\n        </button>\r\n\r\n        {messageLogin ? (\r\n          <p id=\"lbl_message_login\">\r\n            {\" \"}\r\n            <label>{messageLogin} </label>\r\n          </p>\r\n        ) : null}\r\n\r\n        {/* <Link class=\"nav-link navbar-light\" exact strict to=\"/Home\">Home <span class=\"sr-only\">Home</span></Link> */}\r\n      </div>\r\n\r\n      <div id=\"register\">\r\n        <h2 id=\"headingRegister\">Register</h2>\r\n        <p></p>\r\n        <label id=\"lblregister\">\r\n          <strong>Firstname : </strong>\r\n          <input onChange={getCreateFname} type=\"text\" id=\"fname\" />\r\n        </label>\r\n        <p></p>\r\n        <label id=\"lblregister\">\r\n          <strong>Lastname : </strong>\r\n          <input onChange={getCreateLname} type=\"text\" id=\"lname\" />\r\n        </label>\r\n        <p></p>\r\n        <label id=\"lblregister\">\r\n          <strong>EmailID : </strong>\r\n          <input\r\n            onChange={getCreateEmail}\r\n            type=\"email\"\r\n            id=\"Email\"\r\n            placeholder=\"a@com\"\r\n          />\r\n        </label>\r\n        <p></p>\r\n        <label id=\"lblregister\">\r\n          <strong>Password : </strong>\r\n          <input onChange={getCreatePwd} type=\"password\" id=\"pwd\" />\r\n        </label>\r\n        <p></p>\r\n        <label id=\"lblregister\">\r\n          <strong>Address : </strong>\r\n          <input onChange={getCreateAddress} type=\"text\" id=\"adress\" />\r\n        </label>\r\n        <p></p>\r\n        <button id=\"btn_register\" onClick={createAccountHandler}>\r\n          Register\r\n        </button>\r\n        {registerMessage ? (\r\n          <p id=\"lbl_message_register\">\r\n            {\" \"}\r\n            <label>{registerMessage} </label>\r\n          </p>\r\n        ) : null}\r\n\r\n        {/* <label>{this.state.messageLogin} </label> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginAndRegister;\r\n","import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport Cart from './component/menu/Cart';\nimport {BrowserRouter as Router,Route,Switch,Redirect} from 'react-router-dom';\nimport ErrorBoundary from './component/ErrorBoundary';\nimport MenuMain from './component/menu/MenuMain';\nimport Login from './component/LoginAndRegister/LoginAndRegister';\nimport PaymentMode from './component/PaymentBill/ModeOfPayment';\n\nfunction App(props) {\n\n  return (\n    <div className=\"App\">\n\n{/* <Login/> */}\n\n\n  <ErrorBoundary>\n\n     <Router>\n     \n        <Switch>\n         {/* <Redirect from=\"/\" to=\"/Login\" component={() => (<Login  />)}/>     */}\n\n          <Route   path=\"/\" exact  component={() => (<Login  />)}/>\n          <Route  path=\"/Login\" exact component={() => (<Login/> )}/>\n\n          {/* <Route   path=\"/\" exact  component={() => (<MenuMain  />)}/> */}\n\n          <Route  path=\"/Home\" exact component={() => (<MenuMain/> )}/>\n\n          <Route  path=\"/paymentMode\" exact component={() => (<PaymentMode/> )}/>\n\n\n        </Switch>\n     \n     </Router> \n\n      </ErrorBoundary>   \n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n /* <Redirect from=\"/\" to=\"/Home\"   component={MenuMain}/>   */\n          /* <Route   path=\"/\" exact  component={() => (<MenuMain getItemClickedInCart={getItemClickedInCart} />)}/> */\n          /* <Route  path=\"/Home\" exact component={() => (<MenuMain>{getItemClickedInCart}</MenuMain> )}/> */\n           /* <Route  path='/Cart' exact component={Cart} /> */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {updateCartReducer} from './allReducer';\r\nimport {arrayForCart} from './allReducer';\r\nimport {priceCalculationReducer} from './allReducer'\r\nimport {combineReducers} from 'redux';\r\n\r\n\r\nconst everyReducers=combineReducers({\r\n    updateCart:updateCartReducer,\r\n    cartArray:arrayForCart,\r\n    priceAmount:priceCalculationReducer\r\n});\r\n\r\nexport default everyReducers;"," export const  updateCartReducer=(state=0,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case \"increaseCart\":\r\n            return   state=state+1;\r\n\r\n        case \"reduceCart\":\r\n             return     state=state-1;\r\n\r\n             case \"defaultCart\":\r\n                 return state=0;\r\n\r\n        default:\r\n           return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const  arrayForCart=(state=[],action)=>{\r\n    switch(action.type)\r\n    {\r\n        case \"arrayForCart\":\r\n         return (\r\n\r\n             [...state,action.payload]\r\n         )\r\n\r\n\r\n         case \"incrementArray\":\r\n             return(\r\n                 [...state,action.payload]\r\n             )\r\n\r\n        \r\n\r\n         case \"deleteArray\":\r\n             return (\r\n                      [state.splice(state.indexOf(action.payload),1)],\r\n                      [...state]\r\n             )\r\n\r\n\r\n              case \"defaultArray\":\r\n \r\n\r\n              return state=[];\r\n\r\n\r\n\r\n\r\n            default:\r\n                //console.log(\"default:\"+state);\r\n                return state;\r\n    }\r\n}\r\n\r\n\r\nexport const priceCalculationReducer=(state=0,action)=>{\r\n    switch(action.type) {\r\n\r\n\r\n        case \"priceAmount\":\r\n            return state=state+action.parameter;\r\n            \r\n         \r\n        case \"decreasePrice\":\r\n            return state=state-action.payload;\r\n\r\n\r\n        case \"defaultPrice\":\r\n            return state=0;\r\n\r\n\r\n            default:\r\n                // console.log(\"action.parameter:\"+action.parameter);\r\n\r\n                return state;\r\n\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\n\n//import updateCartAction from './component/menu/Redux/Action/updateCartAction';\nimport everyReducer from './component/menu/Redux/Reducer/index';\nimport {createStore} from 'redux';\n\nconst store = createStore(everyReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\n\n\n\n\nReactDOM.render(\n\n<Provider  store={store}>\n<App />\n</Provider>\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}